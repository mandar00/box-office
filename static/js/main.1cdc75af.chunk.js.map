{"version":3,"sources":["Nav.jsx","components/Title.jsx","components/MainPage.jsx","misc/Config.jsx","components/Star.jsx","components/Shows/ShowCard.jsx","images/img_not_found.png","misc/CustomHooks.jsx","components/Shows/ShowGrid.jsx","components/Actor/Actorcard.jsx","components/Actor/Actorgrid.jsx","components/Home.jsx","components/Stared.jsx","components/Error.jsx","components/Shows/Cast.jsx","components/Shows/Details.jsx","components/Shows/Seasons.jsx","components/Shows/ShowMainData.jsx","components/Show.jsx","App.js","index.js"],"names":["Nav","className","to","text","map","items","activeclassname","Title","title","subtitle","MainPage","children","base_api","apiGet","queryString","a","fetch","then","r","json","response","Star","isActive","console","log","style","color","ShowCard","id","name","image","summary","onStarClicked","isStared","summary_as_text","split","slice","join","replace","src","alt","type","onClick","showsReducer","prevState","action","showId","filter","usePresistedReducer","reducer","initialState","key","useReducer","initial","presisited","localStorage","getItem","JSON","parse","state","dispatch","useEffect","setItem","stringify","useShows","ShowGrid","data","staredShows","dispatchStared","show","includes","medium","Img_not_found","Actorcard","gender","country","birthday","deathday","Actorgrid","person","bithDay","deathDay","Home","useState","presisitedInput","sessionStorage","input","setInput","newState","useLastQuery","results","setResults","searchOption","setSearchOption","Search","result","onRadioChange","ev","target","value","placeholder","onChange","e","onKeyDown","keyCode","htmlFor","defaultChecked","length","Stared","starred","setShow","isLoading","setIsLoading","error","setError","promises","Promise","all","apiData","catch","err","message","Error","Cast","cast","character","Details","status","premiered","network","Seasons","seasons","reduce","acc","episodeOrder","val","number","ShowMainData","rating","tags","average","dangerouslySetInnerHTML","__html","i","Show","useParams","isMounted","genres","_embedded","App","exact","path","element","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.1cdc75af.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nconst Nav = () => {\r\n  const links = [\r\n    { to: \"/\", text: \"Home\" },\r\n    { to: \"/stared\", text: \"Stared\" },\r\n  ];\r\n\r\n  return (\r\n    <>\r\n    <div className=\"navMainDiv\">\r\n        {links.map((items) => (\r\n            <div key={items.text} className={`nav${items.text}`}>\r\n            <NavLink activeclassname=\"nav\" to={items.to}>{items.text}</NavLink>\r\n            </div>\r\n        ))}\r\n    </div>\r\n    </>\r\n  );\r\n};\r\nexport default Nav;\r\n","import React from \"react\";\r\n\r\nconst Title = ({ title, subtitle }) => {\r\n  return (\r\n    <>\r\n      <div className=\"mainPageTitle\">\r\n        <h1>{title}</h1> \r\n        <p>{subtitle}</p>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\nexport default Title;\r\n","import React from 'react'\r\nimport Nav from '../Nav'\r\nimport Title from './Title'\r\n\r\nconst MainPage=({children}) =>{\r\nreturn(<>\r\n    <Title \r\n        title=\"Box Office\"\r\n        subtitle=\"Are you looking for a movie or an actor \"\r\n    />\r\n    <Nav/>\r\n    {children}\r\n</>)\r\n}\r\nexport default MainPage","const base_api=`https://api.tvmaze.com/`;\r\n\r\nexport async function apiGet(queryString){\r\n  const response=await  fetch(`${base_api}${queryString}`).then(r=>r.json());\r\n  return response;\r\n  //response is a json format of the data \r\n}","import React from 'react'\r\n\r\nconst Star=({isActive}) =>{\r\n    console.log(isActive)\r\n    const active={\r\n        color:'#f9ca24'\r\n    }\r\n    const inactive={\r\n        color:'#c7ecee'\r\n    }\r\nreturn(\r\n    <>\r\n    <i className=\"fa fa-star\" style={isActive?active:inactive}></i>\r\n   \r\n    </>)\r\n}\r\nexport default Star","import React from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\nimport Star from \"../Star\"\r\n\r\n\r\nconst ShowCard=({id,name,image,summary,onStarClicked,isStared}) =>{\r\n\r\n    const summary_as_text=summary\r\n    ?`${summary.split(' ').slice(0, 10).join(' ').replace(/<.>+?/g ,'').replace(/[</.>]+?/g,'')}...`\r\n    :\"No Description\"\r\nreturn(<> \r\n\r\n    <div className=\"ShowCard\">\r\n        <div className=\"ShowCard_img\">\r\n            <img  src={image} alt=\"no img\"></img>\r\n            {console.log(image)}\r\n        </div>\r\n        <h1>\r\n            {name}\r\n        </h1>\r\n        <p>\r\n            {summary_as_text}\r\n        </p>\r\n        <div className=\"link_n_btn\">\r\n            <NavLink activeclassname=\"active\" to={`shows/${id}`}>Read more..</NavLink>\r\n            <button className=\"starButton\" type=\"button\" onClick={onStarClicked} >\r\n            <Star\r\n                isActive={isStared}\r\n            />\r\n            </button>\r\n        </div>\r\n    </div>\r\n\r\n </>)\r\n}\r\nexport default ShowCard","export default __webpack_public_path__ + \"static/media/img_not_found.d11b58e2.png\";","import {useEffect, useReducer,useState} from 'react'\r\n\r\n\r\nfunction showsReducer(prevState,action){\r\n    switch(action.type){\r\n        case 'ADD':\r\n            return[...prevState,action.showId]\r\n           \r\n        case 'REMOVE':\r\n            return[prevState.filter((showId)=>showId!==action.showId)]\r\n        \r\n        default:\r\n            return prevState\r\n    }\r\n}\r\n\r\nfunction usePresistedReducer(reducer,initialState,key){\r\n  const[state,dispatch] = useReducer(reducer,initialState,(initial)=>{\r\n      //the 3rd parameter passed to useReducer is a callback function to set the initial value or initial State \r\n      const presisited=localStorage.getItem(key);\r\n      return presisited?JSON.parse(presisited):initial;\r\n      //look into local storage  for any array named as key if it does set it as initial value \r\n  })\r\n  useEffect(()=>{\r\n    localStorage.setItem(key,JSON.stringify(state))\r\n  },[state,key])\r\n  console.log(state)\r\n  return[state,dispatch];\r\n}\r\n\r\nexport function useShows(key='shows'){\r\n    return usePresistedReducer(showsReducer,[],key)\r\n}\r\n\r\n\r\n\r\n\r\nexport function useLastQuery(key='lastQuery'){\r\n    const [input ,setInput]=useState(()=>{\r\n        const presisitedInput=sessionStorage.getItem(key)\r\n        return presisitedInput? JSON.parse(presisitedInput):\"\";\r\n    })\r\n    //this initial callback function takes an array named lastQuery from  session Storage and set it as input as the value of the search bar is  input the value we get from lastQuery is set as the value in search bar \r\n\r\n    const setPersistedInput=(newState)=>{\r\n        setInput(newState);\r\n        sessionStorage.setItem(key,JSON.stringify(newState));\r\n    }\r\n\r\n    //setPersisitedInput is setinput in Home.jsx the newState  we recive is e.target.value in onInputChange function \r\n    return [input ,setPersistedInput]\r\n}","import React from 'react'\r\nimport ShowCard from './ShowCard'\r\nimport Img_not_found from \"../../images/img_not_found.png\"\r\nimport {useShows} from '../../misc/CustomHooks'\r\n\r\nconst ShowGrid=({data}) =>{\r\n    const[staredShows,dispatchStared]=useShows()\r\n  \r\n    console.log(data)\r\nreturn(<> \r\n\r\n<div className=\"ShowGrid\">\r\n    {data.map(({show} )=>{\r\n        {/* console.log(show.id) */}\r\n        \r\n        const isStared=staredShows.includes(show.id);\r\n        const onStarClicked=()=>{\r\n            if(isStared){\r\n                dispatchStared({type:'REMOVE', showId:show.id})\r\n            }\r\n            else{\r\n                dispatchStared({type:'ADD', showId:show.id})\r\n            }\r\n        }\r\n        return(\r\n            <ShowCard \r\n            key={show.id} \r\n            id={show.id} \r\n            name={show.name} \r\n            image={show.image?show.image.medium:Img_not_found} \r\n            summary={show.summary}\r\n            onStarClicked={onStarClicked}\r\n            isStared={isStared}\r\n            />\r\n        )\r\n    })}\r\n</div>\r\n </>)\r\n}\r\nexport default ShowGrid","import React from \"react\";\r\n\r\nconst Actorcard = ({ image, name, gender, country, birthday, deathday }) => {\r\n  return (\r\n    <>\r\n      <div className=\"ActorCard\">\r\n        <div className=\"ActorGrid_img\">\r\n          <img src={image} alt=\"actor\"></img>\r\n        </div>\r\n        <h1>{name} {gender?`${gender}`:null}</h1>\r\n        {/* null means it will not be displayed on the screen  */}\r\n        <p>\r\n            {country? `Comes from ${country}`:\"no country known\"}\r\n        </p>\r\n        <p>{birthday? `Born on ${birthday}`:null}</p>\r\n        <p>\r\n            {deathday? `Died on ${deathday}`:\"Alive\"}\r\n        </p>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\nexport default Actorcard;\r\n","import React from 'react'\r\nimport Actorcard from \"./Actorcard\"\r\nimport Img_not_found from \"../../images/img_not_found.png\"\r\n\r\n\r\nconst Actorgrid=({data}) =>{\r\nreturn(\r\n\r\n    <>\r\n    <div className=\"ActorGrid\">\r\n\r\n      {data.map(({person})=>{\r\n         return(\r\n            <Actorcard\r\n              key={person.id}\r\n              name={person.name}\r\n              country={person.country?person.country:null}\r\n              bithDay={person.birthday}\r\n              deathDay={person.deathday}\r\n              gender={person.gender}\r\n              image={person.image?person.image.medium:Img_not_found}\r\n              \r\n          />\r\n         )\r\n      })}\r\n    </div>\r\n    </>)\r\n}\r\nexport default Actorgrid","import React, { useState } from \"react\";\r\nimport MainPage from \"./MainPage\";\r\nimport { apiGet } from \"../misc/Config\";\r\nimport ShowGrid from \"./Shows/ShowGrid\"\r\nimport ActorGrid from \"./Actor/Actorgrid\"\r\nimport { useLastQuery } from \"../misc/CustomHooks\"; \r\n\r\nconst Home = () => {\r\n  const [input, setInput] = useLastQuery();\r\n  const [results, setResults] = useState([]); \r\n  const [searchOption,setSearchOption ]=useState(\"shows\");\r\n\r\n  const onInputChange = (e) => {\r\n    setInput(e.target.value);\r\n  };\r\n\r\n  const Search = () => {\r\n          apiGet(`search/${searchOption}?q=${input}`).then(result=> setResults(result) )\r\n          //from apiget function we will get response which is a json format of api \r\n  };\r\n\r\n  const onKeyDown = (ev) => {\r\n    if(ev.keyCode===13){\r\n        Search();\r\n    }\r\n  };\r\n\r\n  const renderResults=()=>{\r\n      if(results && results.length===0){\r\n          return(<div> No Results Found</div>)\r\n      }\r\n      if(results && results.length>0){\r\n          return results[0].show\r\n          ?<ShowGrid data={results}/>\r\n          :<ActorGrid data={results}/>\r\n          \r\n\r\n      }\r\n      return null;\r\n  }\r\n\r\nconst onRadioChange=(ev)=>{\r\n    setSearchOption(ev.target.value);\r\n  }\r\n  console.log(searchOption)\r\n\r\n  return (\r\n    <>\r\n      <MainPage>\r\n\r\n\r\n      <div className=\"searchAreaDiv\">\r\n        <input\r\n        className=\"mainSearchBar\"\r\n          type=\"text\"\r\n          placeholder=\"Search\"\r\n          onChange={onInputChange}\r\n          onKeyDown={onKeyDown}\r\n          value={input}\r\n        />\r\n        <button className=\"mainSearchButton\" type=\"button\" onClick={Search}>\r\n          Search\r\n        </button><br/>\r\n        </div>\r\n\r\n\r\n        <div className=\"mainSelectDiv\">\r\n        <label className=\"shows-search\" htmlFor=\"shows-search\">\r\n          <input className=\"showSelect\" id=\"shows-search\" type=\"radio\" name=\"search-select\" value=\"shows\"  onChange={onRadioChange} defaultChecked=\"true\"></input>\r\n          Shows\r\n        </label>\r\n\r\n        <label className=\"actor-search\" htmlFor=\"actor-search\">\r\n          <input className=\"actorSelect\" id=\"actor-search\" type=\"radio\" name=\"search-select\" value=\"people\" onChange={onRadioChange}></input>\r\n          Actors\r\n        </label>\r\n        </div>\r\n        \r\n        {renderResults()}\r\n      </MainPage>\r\n    </>\r\n  );\r\n};\r\nexport default Home;\r\n","import React, { useEffect ,useState } from 'react'\r\nimport MainPage from \"./MainPage\"\r\nimport {useShows} from \"../misc/CustomHooks\"\r\nimport {apiGet} from '../misc/Config'\r\nimport ShowGrid from './Shows/ShowGrid'\r\n\r\nconst Stared=() =>{\r\n\r\n    const [starred]=useShows();\r\n    console.log(starred)\r\n    console.log(typeof(starred))\r\n    console.log(starred.length)\r\n\r\n    const [show ,setShow]=useState(null);\r\n    const [isLoading ,setIsLoading]=useState(true);\r\n    const [error ,setError]=useState(null);\r\n\r\n\r\n    useEffect(()=>{\r\n        if(starred && starred.length >0){\r\n            const promises=starred.map(showId=>apiGet(`shows/${showId}`))\r\n            Promise.all(promises)\r\n            .then(apiData=>apiData.map(show=>({show})))\r\n            //as when we get data from apiGet(search/shows?=q=f) we get an object with an obj named show init so to keep the format same we need  to name each obj in results as shows\r\n            //results =[\r\n            // show:{....}\r\n            // show:{....}\r\n            // ]\r\n            .then(results=>{\r\n                console.log(results)\r\n                setShow(results)\r\n                setIsLoading(false)\r\n                setError(null)\r\n            })\r\n            .catch(err=>{\r\n                setError(err.message)\r\n                setIsLoading(false);\r\n            })\r\n        }\r\n        \r\n    },[starred])\r\n    console.log(show)\r\n    return <MainPage>\r\n    {isLoading &&  <div>data is loading</div>}\r\n    {error && <div>error has occured :{error}</div>}\r\n    {!isLoading && !show && <div>no shows Starred</div>}\r\n    {!isLoading && !error && show && <ShowGrid data={show}/>}\r\n    </MainPage>\r\n}\r\n\r\nexport default Stared","import React from 'react'\r\n\r\nconst Error=() =>{\r\nreturn(<>\r\n    <h1>Error msg : page not Found </h1>\r\n</>)\r\n}\r\nexport default Error","import React from 'react'\r\nimport Img_not_found from \"../../images/img_not_found.png\";\r\n\r\n\r\nconst Cast=({cast}) =>{\r\n  console.log(cast)\r\nreturn(\r\n    <>\r\n    <h1>Cast</h1>\r\n      <div>\r\n        {cast.map(({person,character},id)=>{\r\n          \r\n            return(\r\n              <div className=\"readMoreCast\" key={id}>\r\n            <div className=\"readMoreSingleCast\" >\r\n              <img src={person.image?person.image.medium:Img_not_found} alt=\"cast_person\"></img>  <p>{person.name}:{character.name}</p>\r\n            </div>\r\n            \r\n          </div>\r\n          \r\n            )\r\n        })}\r\n      </div>\r\n    </>)\r\n}\r\nexport default Cast","import React from 'react'\r\n\r\nconst Details=({status,premiered,network}) =>{\r\nreturn(\r\n    <>\r\n    <div className=\"readMoreDetailsDiv\">\r\n      <div className=\"detailsStatus\">\r\n        <h2>Details</h2>\r\n        <p>Status:<span>{status}</span></p>\r\n      </div>\r\n      <div >\r\n        Premiered:{premiered} {network? `on ${network.name}`:null}\r\n      </div>\r\n    </div>\r\n    </>)\r\n}\r\nexport default Details","import React from \"react\";\r\n\r\nconst Seasons = ({ seasons }) => {\r\n  // console.log(seasons)\r\n  return (\r\n    <>\r\n      <div>\r\n        <div className=\"readMoreSeasonsNo\">\r\n          <p>Total No of Seasons:<span>{seasons.length}</span></p>\r\n        </div>\r\n        <div className=\"readMoreEpisodeNo\">\r\n          <p>Total no of Episodes:<span>{seasons.reduce((acc, seasons) =>  acc + seasons.episodeOrder, 0)}</span></p>\r\n        </div>\r\n        <div className=\"readMoreSeasonMap\">\r\n          {seasons.map((val, id) => {\r\n            return (\r\n              <div key={id}>\r\n                <p>Season:<span>{val.number}</span></p>\r\n                <p>episodes:<span>{val.episodeOrder}</span></p>\r\n                \r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\nexport default Seasons;\r\n","import React from \"react\";\r\nimport Img_not_found from \"../../images/img_not_found.png\";\r\n\r\nconst ShowMainData = ({ image, name, summary, rating, tags }) => {\r\n  return (\r\n    <>\r\n      <div className=\"readMoreMainData\">\r\n        <div className=\"readMoreImg\">\r\n          <img\r\n            src={image ? image.medium : Img_not_found}\r\n            alt=\"show_cover\"\r\n          ></img>\r\n        </div>\r\n\r\n        <div className=\"readMoreNameRating\">\r\n          <div className=\"readMoreName\">\r\n          {name}\r\n          </div>\r\n\r\n          <div className=\"readMoreRating\">\r\n            <i className=\"far fa-star\"></i>\r\n            {rating.average ? rating.average : \"null\"}\r\n          </div>\r\n        </div>\r\n\r\n        <div\r\n          className=\"readMoreSummary\"\r\n          dangerouslySetInnerHTML={{ __html: summary }}\r\n        >\r\n          {/* dangerouslyusedhtml means data in summary  is in html form so to use obj data as html markup we use dangerousely used html  */}\r\n        </div>\r\n\r\n        <div className=\"readMoreTags\">\r\n        <p>Tags:</p>\r\n          {tags.map((val, i) => {\r\n            return <p key={i}>{val}</p>;\r\n          })}\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\nexport default ShowMainData;\r\n","import React, { useEffect, useReducer } from \"react\";\r\nimport { useParams } from \"react-router\";\r\nimport { apiGet } from \"../misc/Config\";\r\nimport Cast from \"./Shows/Cast\";\r\nimport Details from \"./Shows/Details\";\r\nimport Seasons from \"./Shows/Seasons\";\r\nimport ShowMainData from \"./Shows/ShowMainData\";\r\n\r\nconst initialState={\r\n  show:null,\r\n  isLoading:true,\r\n  error:null\r\n}\r\n\r\nconst reducer=(state,action)=>{\r\n  console.log(action)\r\n    switch(action.type){\r\n      case 'FETCH_SUCCESS':{\r\n        return{ ...state,show:action.show,isLoading:false,error:null};\r\n        \r\n      }\r\n      case 'FETCH_FAILED':{\r\n        return{ ...state,error:action.error,isLoading:false}\r\n      }\r\n\r\n      default:\r\n        return state;\r\n       \r\n    }\r\n}\r\n\r\nconst Show = () => {\r\n  // let isMounted = true;\r\n  const { id } = useParams();\r\n  //id gives us the id that is in the url\r\n\r\n  // const [show, setShow] = useState();\r\n  // const [isLoading, setIsLoading] = useState(true);\r\n  // const [error, setError] = useState(\"\");\r\n\r\n  const[{show,isLoading,error},dispatch]=useReducer(reducer,initialState)\r\n\r\nuseEffect(()=>{\r\n    let isMounted=true;\r\n    apiGet(`shows/${id}?embed[]=seasons&embed[]=cast`)\r\n    .then((results) => {\r\n      if (isMounted) {\r\n\r\n        dispatch({type:\"FETCH_SUCCESS\",show:results})\r\n        // setShow(results);\r\n        // setIsLoading(false);\r\n      }\r\n    })\r\n    .catch((err) => {\r\n      if (isMounted) {\r\n\r\n        dispatch({type:\"FETCH_FAILED\",error:err.message})\r\n        // setError(err.message);  \r\n        // setIsLoading(false);\r\n      }\r\n    });\r\n\r\n    return()=>{\r\n        isMounted=false;\r\n    }\r\n\r\n    //we use callback function to ensure that isMounted changes only after .then or .catch method is executed \r\n    // apiGet method \r\n},[id])\r\n  console.log(show)\r\n  // console.log(show._embedded)\r\n\r\n\r\n  // if(show){\r\n  //   return<div>{show.name}</div>\r\n  // }\r\n  if(isLoading){\r\n    return(<div>the page is isLoading</div>)\r\n  }\r\n\r\n  if(error){\r\n    return(<div>error occured {error}</div>)\r\n  }\r\n\r\n return(\r\n   <>\r\n     <div>\r\n       <ShowMainData\r\n         //cant use show if isLoading  or error is not used prior to it \r\n         image={show.image}\r\n         name={show.name}\r\n         rating={show.rating}\r\n         summary={show.summary}\r\n         tags={show.genres}\r\n         \r\n       />\r\n     </div>\r\n     <div>\r\n     {/* <h2>details</h2> */}\r\n       <Details \r\n         status={show.status}\r\n         network={show.network}\r\n         premiered={show.premiered}\r\n       />\r\n     </div>\r\n     <div>\r\n       <Seasons \r\n       seasons={show._embedded.seasons}\r\n       />\r\n       {console.log(show._embedded.seasons)}\r\n\r\n     </div>\r\n     <div>\r\n       <Cast \r\n       cast={show._embedded.cast}\r\n       />\r\n      \r\n     </div>\r\n     \r\n   </>\r\n\r\n )\r\n};\r\nexport default Show;\r\n","import React from 'react';\nimport {Routes,Route} from \"react-router-dom\"\nimport Home from './components/Home';\nimport Stared from './components/Stared';\nimport Error from './components/Error';\nimport Show from './components/Show';\n\nfunction App() {\n  return (\n    < >\n      <Routes>\n        <Route exact  path=\"/\" element={<Home/>} />\n        <Route exact  path=\"/stared\" element={<Stared/>} />\n        <Route path=\"/*\" element={<Error/>}></Route>\n        <Route exact path=\"/shows/:id\" element={<Show/>}/>\n      </Routes>\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {HashRouter} from \"react-router-dom\"\nimport App from './App';\nimport \"./index.css\"\n\nReactDOM.render(\n  <>\n  <HashRouter>\n    <App />\n  </HashRouter>\n  </>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}